MYSQL:
  conn: 127.0.0.1
  usr: test

some_modules:
  type: module_import
  import:
    - "math"

TesterClass:
  name: TesterClass
  type: class_definition
  attributes:
    dictionary:
      a: a
      b: b
    list_type:
      - 1
      - 2
      - 3
      - 4
    some_value: 3.14
    math_e:
      type: function
      name: math_e
      is_method: true
      args:
        x: 7
        y: 2
      import:
        - "math"
      load: >
        def math_e(self, x, y):
          print('CLASS START >>')
          print('x, y:', x,y)
          print(self.__class__.__name__)
    datenow:
      type: lambda
      import:
        - "from datetime import datetime as dd"
      load: "lambda self: print(dd.utcnow().strftime('%Y-%m-%d'))"



crypt_exchanges:
  type: api_json
  url: https://cryptingup.com/api/exchanges
  expected_http_status: 200
  load_as_rick: true
  deep: true

some_field: _|arg_name|_

encoded:
  type: base64
  load: dG9vIG1hbnkgc2VjcmV0cw==

some_reference: &some_reference_ref
  first: 3.14
  second: 42

another_rick:
  type: from_file
  file_path: './tests/placebos/test_config.json'
  load_as_rick: true
  deep: true
  load_lambda: true

a_csv:
  type: from_csv
  file_path: './tests/placebos/test.csv'
  load_as_rick: false
  fieldnames: [A, B, C, D]

another_text:
  type: from_file
  file_path: './tests/placebos/test_config.json'

BASICS:
  text: test
  dictionary:
    one: value
    two: value
  number: 2
  list:
    - one
    - two
    - four
    - name: John
      age: 20
  USERNAME:
    type: env
    load: USERNAME
  callable:
    type: lambda
    load: "lambda: print('hell world!')"
  datenow:
    type: lambda
    import:
      - "from datetime import datetime as dd"
    load: "print(dd.utcnow().strftime('%Y-%m-%d'))"
  outer_math_e:
    type: function
    name: outer_math_e
    args:
      x: 42
      y: null
      s: outer function
      any:
        - 1
        - 2
    import:
      - "math"
    load: >
      def outer_math_e(x, y, s, any):
        print('START >>')
        print(math.e)
        iii = 111
        print(iii)
        print('x, y:', x,s)
        if y:
          print(type(y))
        for i in any:
          print(i)
